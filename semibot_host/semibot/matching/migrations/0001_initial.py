# Generated by Django 3.2.7 on 2021-09-26 08:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('is_dynamic', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='LabelSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('const_label', models.ManyToManyField(blank=True, to='matching.Label')),
            ],
        ),
        migrations.CreateModel(
            name='TaskRequestRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('task', models.CharField(max_length=20)),
                ('task_datetime', models.DateTimeField()),
                ('matching_end_datetime', models.DateTimeField()),
                ('callback_url', models.URLField()),
                ('require_candidates', models.IntegerField()),
                ('max_candidates', models.IntegerField()),
                ('rematching_duration', models.DurationField()),
                ('next_rematching', models.DateTimeField()),
                ('joined_candidates', models.ManyToManyField(blank=True, related_name='joined_task_request', to='matching.Candidate')),
            ],
        ),
        migrations.CreateModel(
            name='ThroughRequestLabelSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='matching.labelset')),
                ('task_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='matching.taskrequestrequest')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.AddField(
            model_name='taskrequestrequest',
            name='label_set',
            field=models.ManyToManyField(through='matching.ThroughRequestLabelSet', to='matching.LabelSet'),
        ),
        migrations.AddField(
            model_name='taskrequestrequest',
            name='requesting_candidates',
            field=models.ManyToManyField(blank=True, related_name='reserve_task_request', to='matching.Candidate'),
        ),
        migrations.CreateModel(
            name='LabelValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
                ('label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='matching.label')),
            ],
        ),
        migrations.AddField(
            model_name='labelset',
            name='var_label',
            field=models.ManyToManyField(blank=True, to='matching.LabelValue'),
        ),
        migrations.AddConstraint(
            model_name='labelvalue',
            constraint=models.UniqueConstraint(fields=('label', 'value'), name='labelvalue_unique'),
        ),
    ]
