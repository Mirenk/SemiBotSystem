version: '3'
services:
    matching_host:
        build: matching_host
        container_name: matching_host
        volumes:
            -   "./log:/var/log"
        command: >
            bash -c "DJANGO_SETTINGS_MODULE=matchingproj.settings celery -A matchingproj beat --scheduler django_celery_beat.schedulers:DatabaseScheduler --pidfile /celerybeat.pid &
            celery -A matchingproj worker &
            python3 manage.py grpcrunserver &
            uwsgi --socket :8081 --module matchingproj.wsgi"
        expose:
            - "8081"
            - "50051"
        tty: true
        depends_on:
        - mysql_db
        - semi_data
        - redis
        - join_worker

    join_worker:
        build: matching_host
        container_name: join_worker
        command: >
            celery -A matchingproj worker -Q join
        depends_on:
            - mysql_db
            - semi_data
            - redis

    semi_app:
        build: semi_app
        container_name: semi_app
        volumes:
            -   "./log:/var/log"
        command: >
            bash -c "DJANGO_SETTINGS_MODULE=semiproj.settings celery -A semiproj beat --scheduler django_celery_beat.schedulers:DatabaseScheduler --pidfile /celerybeat.pid &
            celery -A semiproj worker &
            uwsgi --socket :8080 --module semiproj.wsgi"
        expose:
            - "8080"
        tty: true
        depends_on:
        - mysql_db
        - redis_semi

    semi_data:
        build: semi_data
        container_name: semi_data
        volumes:
            -   "./log:/var/log"
        command: >
            bash -c "python3 manage.py grpcrunserver &
            uwsgi --socket :8082 --module dataproj.wsgi"
        expose:
            - "8082"
            - "50051"
        tty: true
        depends_on:
        - mysql_db

    mysql_db:
        build: mysql_db
        container_name: mysql_db
        command:
            - --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_ROOT_PASSWORD: Endeavor
            MYSQL_ROOT_HOST: '%'
        ports:
            - "3306:3306"
        volumes:
            - "./mysql_db/init:/docker-entrypoint-initdb.d" # db初期化
            - "mysql:/var/lib/mysql" # db永続化(コンテナ再起動後もデータ保持)

    # For celery
    redis:
        image: redis:alpine
        container_name: redis

    redis_semi:
        image: redis:alpine
        container_name: redis_semi

    nginx:
        image: nginx
        container_name: nginx_semi
        ports:
            - 8000:80
        volumes:
            - "./nginx/default.conf:/etc/nginx/conf.d/default.conf"
            - "./nginx/uwsgi_params:/etc/nginx/uwsgi_params"
        depends_on:
            - semi_app
            - matching_host
            - semi_data

volumes:
    mysql: # db用名前付きボリューム

