syntax = "proto3";

package matching_pb;

import "type.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

message AddTaskRequestRequest {
  // ラベルセット
  // これを優先度順に送り、順に選択していく
  message LabelSet {
    repeated matching_pb.Label const_label = 1;
    repeated matching_pb.LabelValue var_label = 2;
  }

  matching_pb.TaskRequestData task_request = 1;
  repeated LabelSet label_set = 2;
  google.protobuf.Timestamp matching_end_date = 3;
  string callback_url = 4;
  // 最低必要人数
  uint32 require_candidates = 5;
  // 最大人数、0であれば制限なし
  // 0<require_candidates<=max_candidates
  uint32 max_candidates = 6;
  // 再募集間隔
  google.protobuf.Duration rematching_duration = 7;
}

message AddTaskRequestResponse {
  enum Result {
    SUCCESS = 0;
    FAILED = 1;
  }
  Result result = 1;
  string message = 2;
}

service MatchingServer {
  rpc AddTaskRequest (AddTaskRequestRequest) returns (AddTaskRequestResponse);
}